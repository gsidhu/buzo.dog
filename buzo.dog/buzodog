server {
    server_name buzo.xyz www.buzo.xyz;

    root /home/thatgurjot/buzo.xyz/dist;

    index index.html index.htm index.nginx-debian.html;

    location / {
	     try_files $uri $uri/ /index.html;

       set $cors '';
       if ($http_origin ~ '^https?://(localhost|www\.buzo\.dog|buzo\.dog|127\.0\.0\.1?:8080)') {
               set $cors 'true';
       }

       if ($cors = 'true') {
               add_header 'Access-Control-Allow-Origin' "$http_origin" always;
               add_header 'Access-Control-Allow-Credentials' 'true' always;
               add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
               add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With' always;
               # required to be able to read Authorization header in frontend
               #add_header 'Access-Control-Expose-Headers' 'Authorization' always;
       }

       if ($request_method = 'OPTIONS') {
               # Tell client that this pre-flight info is valid for 20 days
               add_header 'Access-Control-Max-Age' 1728000;
               add_header 'Content-Type' 'text/plain charset=UTF-8';
               add_header 'Content-Length' 0;
               return 204;
       }
    }

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/buzo.xyz/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/buzo.xyz/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot


}

server {
    if ($host = www.buzo.xyz) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    if ($host = buzo.xyz) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    listen 80;
    server_name buzo.xyz www.buzo.xyz;
    return 404; # managed by Certbot




}
